// hooks/useWarmUpApi.ts
// Fun√ß√£o respons√°vel por "acordar" a API assim que o app for carregado.
// √ötil para servidores gratuitos que hibernam por inatividade (ex: Render, Railway).

import { apiClient } from '@services/apiClient';
import axios from 'axios'; // Para identificar o tipo do erro

/**
 * Envia uma requisi√ß√£o GET leve para "acordar" a API assim que o app for iniciado.
 */
export async function warmUpApi(): Promise<void> {
  try {
    // Envia uma requisi√ß√£o leve para um endpoint p√∫blico
    await apiClient.get('/jogos');

    if (__DEV__) {
      console.log('üî• [warmUpApi] API acordada com sucesso!');
    }
  } catch (error: unknown) {
    if (axios.isAxiosError(error)) {
      if (__DEV__) {
        if (error.code === 'ECONNABORTED') {
          console.warn('‚ö†Ô∏è [warmUpApi] Timeout ao tentar acordar a API (provavelmente iniciando).');
        } else {
          console.warn('‚ö†Ô∏è [warmUpApi] Erro ao acordar a API:', error.message);
        }
      }
    } else {
      if (__DEV__) {
        console.warn('‚ö†Ô∏è [warmUpApi] Erro inesperado ao acordar a API.');
      }
    }
  }
}
